<ui:AuthorizablePrimaryViewPage
    x:Class="SnapBilling.Customer.Views.CustomerView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:SnapBilling.Customer.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    xmlns:views="using:SnapBilling.Customer.Views"
    xmlns:controls="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:controls1="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:controls2="using:SnapBilling.Customer.Controls"
    NavigationCacheMode="Enabled"
        xmlns:UwpControl="using:SnapBilling.Services.AppServices"
     xmlns:ext ="using:Microsoft.Toolkit.Uwp.UI.Extensions"
    xmlns:Charting="using:WinRTXamlToolkit.Controls.DataVisualization.Charting"
    xmlns:valueConverters="using:SnapBilling.Customer.Converters"
    xmlns:localprimitives="using:Microsoft.Toolkit.Uwp.UI.Controls.Primitives" xmlns:telerikDataViz="using:Telerik.UI.Xaml.Controls.DataVisualization" xmlns:telerik="using:Telerik.UI.Xaml.Controls.Chart" xmlns:ui="using:SnapBilling.Core.UI"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
    xmlns:Custom="using:WinRTXamlToolkit.Controls.DataVisualization">
    <ui:AuthorizablePrimaryViewPage.Resources>
        <ResourceDictionary>

            <DataTemplate x:Key="PointTemplate">
                <Rectangle Width="8" Height="8" RadiusX="8" RadiusY="8">
                    <Rectangle.Fill>
                        <SolidColorBrush Color="Green"></SolidColorBrush>
                    </Rectangle.Fill>
                </Rectangle>
            </DataTemplate>
            <valueConverters:StringToVisibilityConverter x:Key="StringToVisibilityConverter" />
            <valueConverters:PaisaToRupeeConverter x:Key="PaisaToRupeeConverter" />
            <valueConverters:DateTimeToDateConverter x:Key="DateTimeToDateConverter" />
            <valueConverters:LongToStringConverter x:Key="LongToStringConverter" />
            <valueConverters:BoolToYNConverter x:Key="BoolToYNConverter" />

            <valueConverters:DoubleToStringConverter x:Key="DoubleToStringConverter" />
            <valueConverters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
            <valueConverters:BoolToInverseBoolConverter x:Key="BoolToInverseBoolConverter" />
            <valueConverters:BoolToInverseVisibilityConverter x:Key="BoolToInverseVisibilityConverter" />

            <Style x:Key="BoldTextBlockStyle" TargetType="TextBlock">
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="Margin" Value="10" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Foreground" Value="Black" />
            </Style>

            <Style x:Key="BoldCalibriTextBlockStyle" TargetType="TextBlock">
                <Setter Property="FontFamily" Value="Calibri" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="Margin" Value="10" />
                <Setter Property="FontSize" Value="30" />
                <Setter Property="Foreground" Value="Black" />
            </Style>

            <Style x:Key="GrayTextBlockStyle" TargetType="TextBlock">

                <Setter Property="FontFamily" Value="Calibri" />
                <Setter Property="FontWeight" Value="Bold" />

                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Foreground" Value="#737373" />
            </Style>
            <Style x:Key="RowStyle" TargetType="controls1:DataGridRow">
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="controls1:DataGridRow">
                            <localprimitives:DataGridFrozenGrid x:Name="RowRoot">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="NormalAlternatingRow" />
                                        <VisualState x:Name="PointerOver">
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Duration="0" To="#F5F5F5" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="NormalSelected">
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Duration="0" To="#D0D0D0" />
                                                <DoubleAnimation Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="Opacity" Duration="0" To="0.6" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="PointerOverSelected">
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Duration="0" To="#D0D0D0" />
                                                <DoubleAnimation Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="Opacity" Duration="0" To="0.6" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="PointerOverUnfocusedSelected">
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Duration="0" To="White" />
                                                <DoubleAnimation Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="Opacity" Duration="0" To="0.6" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="UnfocusedSelected">
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Duration="0" To="LightGray" />
                                                <DoubleAnimation Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="Opacity" Duration="0" To="0.6" />
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="ValidationStates">
                                        <VisualState x:Name="Valid" />
                                        <VisualState x:Name="Invalid">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <DoubleAnimation Storyboard.TargetName="InvalidVisualElement" Storyboard.TargetProperty="Opacity" Duration="0" To="0.4" />
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <Rectangle x:Name="BackgroundRectangle" Grid.ColumnSpan="2" Fill="Transparent" />
                                <Rectangle x:Name="InvalidVisualElement" Grid.ColumnSpan="2" Opacity="0" Fill="#FFFF00" />

                                <localprimitives:DataGridRowHeader x:Name="RowHeader" Grid.RowSpan="3" localprimitives:DataGridFrozenGrid.IsFrozen="True" />
                                <localprimitives:DataGridCellsPresenter x:Name="CellsPresenter" Grid.Column="1"
                            localprimitives:DataGridFrozenGrid.IsFrozen="True" MinHeight="32"
                            AutomationProperties.AccessibilityView="Raw" />
                                <localprimitives:DataGridDetailsPresenter x:Name="DetailsPresenter" Grid.Row="1" Grid.Column="1"
                            Background="{StaticResource SystemControlBackgroundChromeMediumLowBrush}"
                            AutomationProperties.AccessibilityView="Raw" />
                                <Rectangle x:Name="BottomGridLine" Grid.Row="2" Grid.Column="1" HorizontalAlignment="Stretch" Height="1" />
                            </localprimitives:DataGridFrozenGrid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="HeaderStyle" TargetType="localprimitives:DataGridColumnHeader">
                <Setter Property="FontWeight" Value="Medium" />
                <Setter Property="FontSize" Value="16" />
                <Setter Property="Foreground" Value="Black" />
            </Style>
            <Style x:Key="CellStyle" TargetType="controls1:DataGridCell">
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="controls1:DataGridRow">
                            <localprimitives:DataGridFrozenGrid x:Name="RowRoot">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="NormalAlternatingRow" />
                                        <VisualState x:Name="PointerOver">
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Duration="0" To="#F5F5F5" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="NormalSelected">
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Duration="0" To="#D0D0D0" />
                                                <DoubleAnimation Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="Opacity" Duration="0" To="0.6" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="PointerOverSelected">
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Duration="0" To="#D0D0D0" />
                                                <DoubleAnimation Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="Opacity" Duration="0" To="0.6" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="PointerOverUnfocusedSelected">
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Duration="0" To="White" />
                                                <DoubleAnimation Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="Opacity" Duration="0" To="0.6" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="UnfocusedSelected">
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Duration="0" To="LightGray" />
                                                <DoubleAnimation Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="Opacity" Duration="0" To="0.6" />
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="ValidationStates">
                                        <VisualState x:Name="Valid" />
                                        <VisualState x:Name="Invalid">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <DoubleAnimation Storyboard.TargetName="InvalidVisualElement" Storyboard.TargetProperty="Opacity" Duration="0" To="0.4" />
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <Rectangle x:Name="BackgroundRectangle" Grid.ColumnSpan="2" Fill="Transparent" />
                                <Rectangle x:Name="InvalidVisualElement" Grid.ColumnSpan="2" Opacity="0" Fill="#FFFF00" />

                                <localprimitives:DataGridRowHeader x:Name="RowHeader" Grid.RowSpan="3" localprimitives:DataGridFrozenGrid.IsFrozen="True" />
                                <localprimitives:DataGridCellsPresenter x:Name="CellsPresenter" Grid.Column="1"
                            localprimitives:DataGridFrozenGrid.IsFrozen="True" MinHeight="32"
                            AutomationProperties.AccessibilityView="Raw" />
                                <localprimitives:DataGridDetailsPresenter x:Name="DetailsPresenter" Grid.Row="1" Grid.Column="1"
                            Background="{StaticResource SystemControlBackgroundChromeMediumLowBrush}"
                            AutomationProperties.AccessibilityView="Raw" />
                                <Rectangle x:Name="BottomGridLine" Grid.Row="2" Grid.Column="1" HorizontalAlignment="Stretch" Height="1" />
                            </localprimitives:DataGridFrozenGrid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--<controls:Style x:Key="ChartStyle1" TargetType="controls:ContentControl">
                <controls:Setter Property="HorizontalContentAlignment" Value="Left"/>
                <controls:Setter Property="VerticalContentAlignment" Value="Top"/>
                <controls:Setter Property="Template">
                    <controls:Setter.Value>
                        <controls:ControlTemplate TargetType="controls:ContentControl">
                            <controls:ContentPresenter ContentTemplate="{controls:TemplateBinding ContentTemplate}" Content="{controls:TemplateBinding Content}" ContentTransitions="{controls:TemplateBinding ContentTransitions}" HorizontalAlignment="{controls:TemplateBinding HorizontalContentAlignment}" Margin="{controls:TemplateBinding Padding}" VerticalAlignment="{controls:TemplateBinding VerticalContentAlignment}"/>
                        </controls:ControlTemplate>
                    </controls:Setter.Value>
                </controls:Setter>
            </controls:Style>-->
            <controls:Style x:Key="ChartLegendStyle1" TargetType="Custom:Legend">
                <controls:Setter Property="Template">
                    <controls:Setter.Value>
                        <controls:ControlTemplate  TargetType="Custom:Legend">
                            <controls:Grid/>
                        </controls:ControlTemplate>
                    </controls:Setter.Value>
                </controls:Setter>
            </controls:Style>
        </ResourceDictionary>
    </ui:AuthorizablePrimaryViewPage.Resources>

    <Grid x:Name="parentGrid">

        <Grid.RowDefinitions>
            <RowDefinition Height="70" />
            <RowDefinition Height="5*" />
            <RowDefinition Height="5*" />
        </Grid.RowDefinitions>
        <Grid Width="auto" Grid.Row="0">
            <controls1:DockPanel VerticalAlignment="Center"   HorizontalAlignment="Stretch" Grid.Column="0" Margin="5,0,0,0">
                <TextBlock FontSize="30" Margin="10,0,0,0">
                     <Run Text="{UwpControl:Lang TextValue=customers}"></Run>
                </TextBlock>
                <StackPanel Orientation="Horizontal" Margin="10,0,10,0" HorizontalAlignment="Right">
                    <Grid x:Name="buttonNew">
                        <CommandBar DefaultLabelPosition="Right" Height="40">
                        <AppBarButton x:Name="buttonNewb" Icon="Add" Label="{UwpControl:Lang TextValue=add_customer}"   LabelPosition="Default" HorizontalAlignment="Left"  Tag="new" Command="{Binding AddCustomerClick}">
                            <AppBarButton.KeyboardAccelerators>
                                <UwpControl:SnapVKey Description="{UwpControl:Lang TextValue=add_new_customer}"  Modifiers="Control" Key="N" />
                            </AppBarButton.KeyboardAccelerators>
                        </AppBarButton>

                        </CommandBar>
                    </Grid>
                    <TextBox ext:TextBoxRegex.ValidationMode="Dynamic" ext:TextBoxRegex.ValidationType="Custom"  Height="40" VerticalContentAlignment="Center" VerticalAlignment="Center" Padding="8"  PlaceholderText="Search by Name/Phone/Address/Membership Id" TextChanged="SearchTextChanged" PreviewKeyDown="SearchEnterClicked"  InputScope="AlphanumericFullWidth"  HorizontalAlignment="Center" 
                                                   x:Name="search"  MinWidth="300" Margin="10,0,0,0">

                    </TextBox>
                    <Button x:Name="HelpBtn" Grid.Column="1" Grid.Row="0" ToolTipService.ToolTip="Help" 
                            Click="HelpBtn_Click" HorizontalAlignment="Right" Margin="10,0,0,0">
                        <Button.Content>
                            <Image Height="20" Width="20" Source="/SnapBilling.Core.UI/Assets/Icons/help_icon.png" />
                     </Button.Content>
                   </Button>
                </StackPanel>
            </controls1:DockPanel>
        </Grid>

        <Grid Grid.Row="1">
            <views:CustomersListView x:Name="customerListView" IsTabStop="False"></views:CustomersListView>
        </Grid>
        <!--<ui:SnapGrid Visibility="{Binding IsValid,RelativeSource={RelativeSource Self},Converter={StaticResource BoolToVisibilityConverter}}" Validators="{x:Bind ViewModel.Validators}">-->
        <Button Visibility="Collapsed" BorderBrush="White" Background="#4d4d4d" Foreground="White" Width="30" CornerRadius="0.7" BorderThickness="0.6"   x:Name="ShowCustomerDetailsBtn" Click="ShowCustomerDetailsBtn_Click" Grid.Row="1" 
                  Margin="0,0,18,5" HorizontalAlignment="Right" VerticalAlignment="Bottom">
            <TextBlock Text="&#xE74A;" FontFamily="Segoe MDL2 Assets"></TextBlock>
            <Button.Resources>
                <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="White" />
                <SolidColorBrush x:Key="ButtonForegroundPointerOver" Color="#4d4d4d" />
                <SolidColorBrush x:Key="ButtonForegroundPressed" Color="#4d4d4d" />
                <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="White" />
                <SolidColorBrush x:Key="ButtonBorderBrushPointerOver" Color="#4d4d4d" />
                <SolidColorBrush x:Key="ButtonBorderBrushPressed" Color="#4d4d4d" />

            </Button.Resources>
        </Button>
        <!--</ui:SnapGrid>-->
        <Button Grid.Row="1" Background="#4d4d4d" Visibility="Visible" BorderThickness="0.6" BorderBrush="White" Width="30" Foreground="White" CornerRadius="0.7" x:Name="HideCustomerDetailsBtn" Click="HideCustomerDetailsBtn_Click"  Margin="0,0,18,5"   VerticalAlignment="Bottom" HorizontalAlignment="Right">
            <TextBlock Text="&#xE74B;" FontFamily="Segoe MDL2 Assets"></TextBlock>
            <Button.Resources>
                <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="White" />
                <SolidColorBrush x:Key="ButtonForegroundPointerOver" Color="#4d4d4d" />
                <SolidColorBrush x:Key="ButtonForegroundPressed" Color="#4d4d4d" />
                <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="White" />
                <SolidColorBrush x:Key="ButtonBorderBrushPointerOver" Color="#4d4d4d" />
                <SolidColorBrush x:Key="ButtonBorderBrushPressed" Color="#4d4d4d" />

            </Button.Resources>
        </Button>
        <Grid Grid.Row="2" 
                 x:Name="CustomerDetailsGrid"
                  BorderBrush="LightGray"
                  Margin="0,0,0,5"
                  BorderThickness="1,1,1,1"
                  Background="WhiteSmoke">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="250" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <ScrollViewer Grid.Column="0" Margin="20,0,0,0" BorderThickness="0,0,0,0" BorderBrush="LightGray" VerticalScrollBarVisibility="Visible" HorizontalAlignment="Stretch" MaxHeight="300">
                <StackPanel Margin="20,0,0,0" BorderBrush="LightGray">
                    <Grid Margin="-10,0,0,12">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <controls1:ImageEx     x:Name="ImageExControl3"
                                               CornerRadius="999"
                                               Height="60"
                                               Width="60"
                                               IsCacheEnabled="True"
                                               Background="LightGoldenrodYellow"
                                  Source="../Assets/iconCustomer.png"
                                  PlaceholderSource="../Assets/iconCustomer.png" />
                        <TextBlock Grid.Column="1" Margin="20,0,0,0" HorizontalAlignment="Left" TextWrapping="Wrap" MaxWidth="200" FontWeight="Medium" VerticalAlignment="Center" Foreground="{x:Bind ViewModel.CustomerInfo.IsCustomerDisabled,Mode=OneWay}" Text="{x:Bind ViewModel.CustomerInfo.Name,Mode=OneWay}" FontSize="20"></TextBlock>
                    </Grid>

                    <TextBlock  Text="{UwpControl:Lang TextValue=wallet}" Visibility="{Binding CustomerInfo.IsWallet,Converter={StaticResource BoolToVisibilityConverter }}" Style="{StaticResource GrayTextBlockStyle}" HorizontalAlignment="Left" />

                    <TextBlock  Text="{UwpControl:Lang TextValue=total_due}" Visibility="{Binding CustomerInfo.IsWallet,Converter={StaticResource BoolToInverseVisibilityConverter }}" Style="{StaticResource GrayTextBlockStyle}" HorizontalAlignment="Left" />
                    <controls1:DockPanel>
                        <TextBlock   FontSize="16" Visibility="{Binding CustomerInfo.IsWallet,Converter={StaticResource BoolToInverseVisibilityConverter }}"  Foreground="{x:Bind ViewModel.CustomerInfo.AmountDueForground,Mode=OneWay}">
                            <Run Text="&#x20b9;" />
                            <Run Text="{Binding CustomerInfo.AmountDue,Mode=OneWay,Converter={StaticResource PaisaToRupeeConverter}}" />
                        </TextBlock>
                        <TextBlock   FontSize="16" Visibility="{Binding CustomerInfo.IsWallet,Converter={StaticResource BoolToVisibilityConverter }}"    Foreground="{x:Bind ViewModel.CustomerInfo.AmountDueForground,Mode=OneWay}">
                            <Run Text="&#x20b9;" />
                            <Run Text="{Binding CustomerInfo.WalletAmount,Mode=OneWay,Converter={StaticResource PaisaToRupeeConverter}}" />
                        </TextBlock>

                        <ui:SnapGrid  Visibility="{Binding IsValid,RelativeSource={RelativeSource Self},Converter={StaticResource BoolToVisibilityConverter}}" >
                            <Button Margin="0,-15,50,0" Click="ClearDueButton_Click"  Visibility="{x:Bind ViewModel.CustomerInfo.Phone,Mode=OneWay,Converter={StaticResource StringToVisibilityConverter}}" Content="Pay" BorderBrush="Gray" Background="Transparent"   FontSize="12"  x:Name="ClearCustomerDueButton" HorizontalAlignment="Right"  >
                           <Button.KeyboardAccelerators>
                                    <UwpControl:SnapVKey  Key="Y" Modifiers="Control" Description="{UwpControl:Lang TextValue=customer_payment}" />
                            </Button.KeyboardAccelerators>
                               
                            </Button>
                        </ui:SnapGrid>
                    </controls1:DockPanel>


                    <TextBlock  Text="{UwpControl:Lang TextValue=phone}" Margin="0,10,0,0" Style="{StaticResource GrayTextBlockStyle}" />

                    <Grid >
                        <TextBlock   FontSize="16" Text="{x:Bind ViewModel.CustomerInfo.DisplayPhone,Mode=OneWay}" />
                        <ui:SnapGrid  Visibility="{Binding IsValid,RelativeSource={RelativeSource Self},Converter={StaticResource BoolToVisibilityConverter}}" >
                         
                            <Button BorderBrush="Gray" BorderThickness="1" Background="Transparent" Foreground="Black" IsEnabled="{Binding CustomerInfo.CustomerReminderInfo.IsReminderActive,Mode=OneWay,Converter={StaticResource BoolToInverseBoolConverter}}"  Content="Remind" Visibility="{Binding CustomerInfo.IsWallet,Converter={StaticResource BoolToInverseVisibilityConverter }}"  FontSize="12"  HorizontalAlignment="Right" Click="RemindDueClicked"  Margin="0,0,30,0" >
                                <Button.KeyboardAccelerators>
                                    <UwpControl:SnapVKey Key="R" Modifiers="Control" Description="{UwpControl:Lang TextValue=credit_reminder}"/>
                                </Button.KeyboardAccelerators>
                            </Button>
                        </ui:SnapGrid>

                    </Grid>
                    <StackPanel Visibility="{Binding CustomerInfo.CustomerReminderInfo.IsReminderActive,Mode=OneWay,Converter={StaticResource BoolToVisibilityConverter }}">
                        <TextBlock Text="{UwpControl:Lang TextValue=reminder_active}" Margin="0,10,0,0" Style="{StaticResource GrayTextBlockStyle}" />
                        <TextBlock   FontSize="16" HorizontalAlignment="Left" TextWrapping="Wrap" MaxWidth="200" >
                            <Run Text="{UwpControl:Lang TextValue=last_reminder_on}" FontSize="10" ></Run>
                            <Run FontSize="12" FontWeight="SemiBold" Text="{Binding CustomerInfo.CustomerReminderInfo.createdAt,Mode=OneWay,Converter={StaticResource DateTimeToDateConverter}}" ></Run>
                        </TextBlock>
                    </StackPanel>
                    <!--<StackPanel Margin="0,5,0,0" Visibility="{x:Bind ViewModel.CustomerInfo.Alternatephone,Mode=OneWay,Converter={StaticResource StringToVisibilityConverter}}">

                        <TextBlock Text="AlternatePhone" Margin="0,10,0,0" Style="{StaticResource GrayTextBlockStyle}" />
                        <TextBlock  FontSize="16" Text="{x:Bind ViewModel.CustomerInfo.Alternatephone,Mode=OneWay}" />
                    </StackPanel>-->
                    <StackPanel Visibility="{x:Bind ViewModel.CustomerInfo.Email,Mode=OneWay,Converter={StaticResource StringToVisibilityConverter }}">
                        <TextBlock Text="{UwpControl:Lang TextValue=email}" Margin="0,10,0,0" Style="{StaticResource GrayTextBlockStyle}" />
                        <TextBlock   FontSize="16" HorizontalAlignment="Left" TextWrapping="Wrap" MaxWidth="200" Text="{x:Bind ViewModel.CustomerInfo.Email,Mode=OneWay}" />
                    </StackPanel>
                    <StackPanel Visibility="{x:Bind ViewModel.CustomerInfo.Address,Mode=OneWay,Converter={StaticResource StringToVisibilityConverter }}">

                        <TextBlock Text="{UwpControl:Lang TextValue=address}" Margin="0,10,0,0" Style="{StaticResource GrayTextBlockStyle}" />
                        <TextBlock  FontSize="16" HorizontalAlignment="Left" TextWrapping="Wrap" MaxWidth="200" Text="{x:Bind ViewModel.CustomerInfo.Address,Mode=OneWay}" />
                    </StackPanel>

                    <StackPanel Visibility="{x:Bind ViewModel.CustomerInfo.LastPaidOnDateLabel,Mode=OneWay,Converter={StaticResource StringToVisibilityConverter }}">
                        <TextBlock Text="{UwpControl:Lang TextValue=last_paid_on}" Margin="0,10,0,0" Style="{StaticResource GrayTextBlockStyle}" />
                        <TextBlock  FontSize="16" HorizontalAlignment="Left" TextWrapping="Wrap" MaxWidth="200" Text="{x:Bind ViewModel.CustomerInfo.LastPaidOnDateLabel,Mode=OneWay}" />
                    </StackPanel>
                </StackPanel>
            </ScrollViewer>
            <controls:Pivot Grid.Column="1"  FontSize="14" x:Name="pivotMain" Background="WhiteSmoke"  
                            SelectionChanged="PivotSelectionChanged" Loaded="pivotMain_Loaded">
                <controls:PivotItem x:Name="SummaryItem" Background="Transparent">
                    <controls:PivotItem.Header>
                        <TextBlock Text="{UwpControl:Lang TextValue=summary}" FontSize="17"  Margin="0,10,0,0" />
                    </controls:PivotItem.Header>
                    <ui:CustomerChartSummaryControl x:Name="customerChartSummaryControl" Customer="{x:Bind ViewModel.CustomerInfo, Mode=OneWay}"/>
                </controls:PivotItem>                
                <controls:PivotItem x:Name="BillItem">
                    <controls:PivotItem.Header>
                        <TextBlock Text="{UwpControl:Lang TextValue=bills}" FontSize="17"  Margin="0,10,0,0" />
                    </controls:PivotItem.Header>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="2*" />
                            <RowDefinition Height="8*" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <controls1:DockPanel Grid.Row="0"  Background="LightGray">
                            <FontIcon  Glyph= "&#xF571;" Margin="20,0,0,0" />
                            <TextBlock Text="{UwpControl:Lang TextValue=bills}" FontSize="20" VerticalAlignment="Center" Margin="5,0,0,0">
                            </TextBlock>
                            <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                                <Button Margin="10,0" Click="RefreshBillsClicked">
                                    <SymbolIcon Symbol="Refresh"></SymbolIcon>
                                </Button>
                                <DatePicker Date="{x:Bind ViewModel.CurrentMonth ,Mode=OneWay}"
                                            Grid.Column="1" DayVisible="False" HorizontalAlignment="Right" MinWidth="200" 
                                            Margin="0,0,10,0" DateChanged="BillDatePickerDateChanged" />
                            </StackPanel>
                        </controls1:DockPanel>
                        <controls1:DataGrid Grid.Row="1" x:Name="dataGrid" BorderBrush="LightGray" BorderThickness="1,1,1,1"
                                            Margin="0,0,0,-10" CurrentCellChanged="dataGrid_CurrentCellChanged" ColumnWidth="150"
                                            IsReadOnly="True" RowStyle="{StaticResource RowStyle}"  AutoGenerateColumns="False"
                                            VerticalScrollBarVisibility="Visible"
                                            ItemsSource="{x:Bind  ViewModel.BillsInfo,Mode=OneWay}">
                            <controls1:DataGrid.Columns>
                                <controls1:DataGridTextColumn Header="{UwpControl:Lang TextValue=date}" Binding="{Binding createdAt,Converter={StaticResource DateTimeToDateConverter}}" Tag="Date" />
                                <controls1:DataGridTemplateColumn IsReadOnly="False" Header="{UwpControl:Lang TextValue=invoice_id}">
                                    <controls1:DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Click="OpenBillDetails" Background="Transparent" Tag="{Binding}" >
                                                <Button.Content>
                                                    <TextBlock Foreground="#084f77" TextDecorations="Underline" Text="{Binding Id}"></TextBlock>
                                                </Button.Content>
                                                <Button.Resources>
                                                    <SolidColorBrush x:Key="ButtonBackground" Color="Transparent"/>
                                                    <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="Transparent"/>
                                                    <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="Transparent"/>
                                                </Button.Resources>
                                            </Button>
                                        </DataTemplate>
                                    </controls1:DataGridTemplateColumn.CellTemplate>
                                </controls1:DataGridTemplateColumn>
                                <controls1:DataGridTextColumn Header="{UwpControl:Lang TextValue=bill_amount}" Binding="{Binding BillAmount}" Tag="IsMemo" />
                                <controls1:DataGridTextColumn Header="{UwpControl:Lang TextValue=credit}" Binding="{Binding PendingAmount ,Converter={StaticResource PaisaToRupeeConverter}}" Tag="IsCredit" />
                                <controls1:DataGridTextColumn Header="{UwpControl:Lang TextValue=is_delivery}" Binding="{Binding IsDelivery,Converter={StaticResource BoolToYNConverter}}" Tag="IsDelivery" />
                                <controls1:DataGridTemplateColumn Header="{UwpControl:Lang TextValue=transaction}">
                                    <controls1:DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Margin="10,0" Tag="{Binding}" Background="Transparent" Click="TransactionsForInvoice">
                                                <SymbolIcon Symbol="List"></SymbolIcon>
                                            </Button>
                                        </DataTemplate>
                                    </controls1:DataGridTemplateColumn.CellTemplate>
                                </controls1:DataGridTemplateColumn>
                            </controls1:DataGrid.Columns>
                        </controls1:DataGrid>
                    </Grid>
                </controls:PivotItem>
                <controls:PivotItem x:Name="Wallet">
                    <controls:PivotItem.Header>
                        <TextBlock Text="{UwpControl:Lang TextValue=wallet}" FontSize="17"  Margin="0,10,0,0" />
                    </controls:PivotItem.Header>
                    <Grid>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="2*" />
                            <RowDefinition Height="8*" />

                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <controls1:DockPanel Grid.Row="0"  Background="LightGray">
                            <FontIcon  Glyph="&#xE8A6;" Margin="20,0,0,0" />
                            <TextBlock Text="{UwpControl:Lang TextValue=wallet}" VerticalAlignment="Center" FontSize="20" Margin="5,0,0,0">
                            </TextBlock>
                            <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                                <Button Margin="10,0" Click="RefreshWalletClicked">
                                    <SymbolIcon Symbol="Refresh"></SymbolIcon>
                                </Button>
                                <DatePicker x:Name="WalletDatePicker" Date="{x:Bind ViewModel.CurrentMonth ,Mode=OneWay}" DayVisible="False"  HorizontalAlignment="Right" Margin="0,0,10,0" MinWidth="200" DateChanged="WalletDatePickerDateChanged" />
                            </StackPanel>
                        </controls1:DockPanel>
                        <controls1:DataGrid
        x:Name="dataGrid2"
        BorderBrush="LightGray"
        BorderThickness="1,1,1,1"
                            Grid.Row="1"
        Margin="0,0,0,-10"
                                    ColumnWidth="150"
                                                                 IsReadOnly="True"    
                  

       AutoGenerateColumns="False"
        ItemsSource="{x:Bind ViewModel.TransactionInfo,Mode=OneWay}">
                            <controls1:DataGrid.Columns>
                                <controls1:DataGridTextColumn Header="{UwpControl:Lang TextValue=date}" Binding="{Binding createdAt,Converter={StaticResource DateTimeToDateConverter}}" Tag="Date" />
                                <!--<controls:DataGridTextColumn Header="FirstName" Binding="{Binding FirstName}" Tag="FirstName" />-->
                                <controls1:DataGridTextColumn Header="{UwpControl:Lang TextValue=transaction_no}" Binding="{Binding TransactionId}" Tag="TransactionId" />
                                <controls1:DataGridTextColumn Header="{UwpControl:Lang TextValue=invoice_no}" Binding="{Binding InvoiceId}" Tag="InvoiceId" />
                                <controls1:DataGridTextColumn Header="{UwpControl:Lang TextValue=payment_mode}" Binding="{Binding PaymentMode}" Tag="PaymentMode" />
                                <controls1:DataGridTextColumn Header="{UwpControl:Lang TextValue=payment_type}" Binding="{Binding PaymentType}" Tag="PaymentType" />
                                <controls1:DataGridTextColumn Header="{UwpControl:Lang TextValue=payment}" Binding="{Binding PaidAmount,Converter={StaticResource PaisaToRupeeConverter}}" Tag="PaidAmount" />

                                <controls1:DataGridTextColumn Header="{UwpControl:Lang TextValue=remaining_amt}" Binding="{Binding DisplayRemainingAmount,Converter={StaticResource PaisaToRupeeConverter}}" Tag="Transaction" />
                            </controls1:DataGrid.Columns>
                        </controls1:DataGrid>
                    </Grid>
                </controls:PivotItem>
                <controls:PivotItem x:Name="CustomerDetails">
                    <controls:PivotItem.Header>
                        <TextBlock Text="{UwpControl:Lang TextValue=details}" FontSize="17"  Margin="0,10,0,0" />
                    </controls:PivotItem.Header>
                    <controls2:CustomerDetails IsTabStop="True" TabIndex="2"  EditMode="True" CustomerInfo="{x:Bind ViewModel.CustomerInfo,Mode=OneWay}" ></controls2:CustomerDetails>
                </controls:PivotItem>  
            </controls:Pivot>
        </Grid>
        

    </Grid>
</ui:AuthorizablePrimaryViewPage>